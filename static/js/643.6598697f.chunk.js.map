{"version":3,"file":"static/js/643.6598697f.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/AddContactForm.jsx","components/ContactForm/EditContactForm.jsx","redux/filter/selectors.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ContactCard/ContactCard.styled.js","components/ContactCard/ContactCard.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactForm = styled.form`\n  /* max-width: 452px; */\n  width: 100%;\n  padding: 24px 24px;\n  background-color: ${({ theme }) => theme.colors.primary};\n  border-radius: 15px;\n  box-shadow: 0px 7px 23px rgba(0, 0, 0, 0.05);\n\n  /* @media screen and (min-width: 680px) {\n    padding: 24px 24px;\n  } */\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 15px 20px;\n  width: 100%;\n  font-size: 14px;\n  line-height: 1.4;\n  border: 1px solid ${({ theme }) => theme.colors.inputBorder};\n  border-radius: 15px;\n  outline: none;\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.4;\n    color: ${({ theme }) => theme.colors.secondaryText};\n  }\n\n  &:focus {\n    border-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 24px;\n`;\n\nexport const TextLabel = styled.span`\n  display: block;\n  margin-bottom: 5.5px;\n  font-size: 14px;\n  line-height: 1.4;\n\n  word-wrap: break-word;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  padding: 14px;\n  width: 100%;\n  font-weight: 700;\n  font-size: 10px;\n  line-height: 1.5;\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.primary};\n  background-color: ${({ theme }) => theme.colors.accent};\n  border: 1px solid ${({ theme }) => theme.colors.accent};\n  border-radius: 12px;\n  transition: background-color\n      ${({ theme }) => `${theme.duration} ${theme.timingFunction}`},\n    color ${({ theme }) => `${theme.duration} ${theme.timingFunction}`};\n  cursor: pointer;\n\n  &:hover:not(:disabled) {\n    color: ${({ theme }) => theme.colors.accent};\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  &:disabled {\n    opacity: 0.8;\n  }\n`;\n\nexport const ErrorText = styled.span`\n  padding: 2px;\n  font-size: 12px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.colors.errorText};\n`;\n","import { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { toast } from 'react-hot-toast';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useAddContactMutation } from 'redux/contacts/slice';\nimport { Loader } from 'components/Loader';\nimport { validatePattern, errorMessage } from 'constants';\nimport * as S from './ContactForm.styled';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .trim()\n    .min(2)\n    .max(25)\n    .matches(validatePattern.name, errorMessage.name)\n    .required(),\n  number: yup\n    .string()\n    .max(20)\n    .matches(validatePattern.number, errorMessage.number)\n    .required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const AddContactForm = ({ contacts }) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    defaultValues: initialValues,\n    resolver: yupResolver(schema),\n  });\n  const [addContact, { isLoading: isAdding, isError }] =\n    useAddContactMutation();\n\n  useEffect(() => {\n    if (isError) {\n      toast.error(\n        'Під час додавання контакту сталася помилка. Повторіть спробу пізніше.'\n      );\n    }\n  }, [isError]);\n\n  const onSubmit = async ({ name, number }) => {\n    const normalizedName = name.trim();\n\n    if (contactValidationByName(normalizedName)) {\n      toast.error(`На щастя ${normalizedName} вже в контактах!`);\n      return;\n    }\n\n    await addContact({ name: normalizedName, number });\n    reset();\n  };\n\n  const contactValidationByName = newName => {\n    return contacts.some(({ name }) => name === newName);\n  };\n\n  return (\n    <S.ContactForm\n      autoComplete=\"on\"\n      noValidate\n      onSubmit={handleSubmit(data => {\n        onSubmit(data);\n      })}\n    >\n      <S.Label>\n        <S.TextLabel>Name</S.TextLabel>\n        <S.Input {...register('name')} type=\"text\" placeholder=\"Ім'я\" />\n        {errors.name && <S.ErrorText>{errors.name?.message}</S.ErrorText>}\n      </S.Label>\n\n      <S.Label>\n        <S.TextLabel>Number</S.TextLabel>\n        <S.Input\n          {...register('number')}\n          type=\"tel\"\n          placeholder=\"Номер телефону\"\n        />\n        {errors.number && <S.ErrorText>{errors.number?.message}</S.ErrorText>}\n      </S.Label>\n\n      <S.Button type=\"submit\" disabled={isAdding}>\n        {isAdding ? (\n          <Loader width=\"17\" height=\"17\" color=\"#fff\" />\n        ) : (\n          'Додати контакт'\n        )}\n      </S.Button>\n    </S.ContactForm>\n  );\n};\n\nAddContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { toast } from 'react-hot-toast';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport PropTypes from 'prop-types';\nimport {\n  useUpdateContactMutation,\n  useFetchContactsQuery,\n} from 'redux/contacts/slice';\nimport { Loader } from 'components/Loader';\nimport { validatePattern, errorMessage } from 'constants';\nimport * as S from './ContactForm.styled';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .trim()\n    .max(255)\n    .matches(validatePattern.name, errorMessage.name),\n  number: yup\n    .string()\n    .max(20)\n    .matches(validatePattern.number, errorMessage.number),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const EditContactForm = ({ id, name: oldName, number: oldNumber }) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    defaultValues: initialValues,\n    resolver: yupResolver(schema),\n  });\n  const [updateContact, { isLoading: isUpdating, isError }] =\n    useUpdateContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  useEffect(() => {\n    if (isError) {\n      toast.error(\n        'Під час оновлення контакту сталася помилка. Повторіть спробу пізніше.'\n      );\n    }\n  }, [isError]);\n\n  const onSubmit = async ({ name, number }) => {\n    const normalizedName = name.trim();\n\n    let data = {};\n\n    if (normalizedName) {\n      if (contactValidationName(normalizedName)) {\n        return;\n      }\n      data.name = normalizedName;\n    }\n\n    if (number) {\n      if (contactValidationNumber(number)) {\n        return;\n      }\n      data.number = number;\n    }\n\n    await updateContact({ id, data });\n\n    reset();\n  };\n\n  const contactValidationName = newName => {\n    if (newName === oldName) {\n      toast.error('Ви ввели старе ім\"я');\n      return true;\n    }\n\n    if (contacts.some(({ name }) => name === newName)) {\n      toast.error(`${newName} вже в контактах.`);\n      return true;\n    }\n\n    return false;\n  };\n\n  const contactValidationNumber = newNumber => {\n    if (newNumber === oldNumber) {\n      toast.error('Ви ввели старий номер телефону.');\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <S.ContactForm\n      autoComplete=\"off\"\n      noValidate\n      onSubmit={handleSubmit(data => {\n        onSubmit(data);\n      })}\n    >\n      <S.Label>\n        <S.TextLabel>Current name: {oldName}</S.TextLabel>\n        <S.Input {...register('name')} type=\"text\" placeholder=\"Нове ім'я\" />\n        {errors.name && <S.ErrorText>{errors.name?.message}</S.ErrorText>}\n      </S.Label>\n\n      <S.Label>\n        <S.TextLabel>Current number: {oldNumber}</S.TextLabel>\n        <S.Input\n          {...register('номер')}\n          type=\"tel\"\n          placeholder=\"Новий номер телефону\"\n        />\n        {errors.number && <S.ErrorText>{errors.number?.message}</S.ErrorText>}\n      </S.Label>\n\n      <S.Button type=\"submit\" disabled={isUpdating}>\n        {isUpdating ? (\n          <Loader width=\"15\" height=\"15\" color=\"#fff\" />\n        ) : (\n          'Редагувати контакт'\n        )}\n      </S.Button>\n    </S.ContactForm>\n  );\n};\n\nEditContactForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","export const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  margin-bottom: 12px;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 140%;\n  color: ${({ theme }) => theme.colors.primaryText};\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 24px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 15px 20px;\n  /* max-width: 400px; */\n  width: 100%;\n  font-size: 14px;\n  line-height: 1.4;\n  border: 1px solid ${({ theme }) => theme.colors.inputBorder};\n  border-radius: 15px;\n  outline: none;\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.4;\n    color: ${({ theme }) => theme.colors.secondaryText};\n  }\n\n  &:focus {\n    border-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filter/slice';\nimport { selectFilter } from 'redux/filter/selectors';\nimport * as S from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    dispatch(changeFilter(e.target.value.toLowerCase().trim()));\n  };\n\n  return (\n    <>\n      <S.Text>Пошук контактів за іменами</S.Text>\n      <S.Label aria-label=\"Contacts filter by name\">\n        <S.Input\n          onChange={handleChangeFilter}\n          value={filter}\n          name=\"filter\"\n          type=\"text\"\n          placeholder=\"Друкуйте тут...\"\n        />\n      </S.Label>\n    </>\n  );\n};\n","import { RxCross2 } from 'react-icons/rx';\nimport styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  z-index: 4;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(79, 209, 197, 0.2);\n  overflow-y: auto;\n`;\n\nexport const Modal = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  max-width: 452px;\n  width: 100%;\n  transform: translate(-50%, -50%);\n\n  @media screen and (max-height: 380px) {\n    top: 30px;\n    left: 50%;\n    max-width: 452px;\n    width: 100%;\n    transform: translateX(-50%);\n  }\n`;\n\nexport const CloseIcon = styled(RxCross2)`\n  width: 20px;\n  height: 20px;\n  color: ${({ theme }) => theme.colors.accent};\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  z-index: 1;\n  top: 8px;\n  right: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 30px;\n  height: 30px;\n  padding: 0;\n  background-color: ${({ theme }) => theme.colors.primary};\n  box-shadow: 0px 3.5px 5.5px rgba(0, 0, 0, 0.02);\n  border: 1px solid ${({ theme }) => theme.colors.primary};\n  border-radius: 12px;\n  transition: border-color\n    ${({ theme }) => `${theme.duration} ${theme.timingFunction}`};\n  cursor: pointer;\n\n  &:hover {\n    border-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { EditContactForm } from 'components/ContactForm';\nimport * as S from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onCloseModal, ...otherProps }) => {\n  useEffect(() => {\n    const handleCloseModal = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    document.body.style.overflow = 'hidden';\n    window.addEventListener('keydown', handleCloseModal);\n\n    return () => {\n      document.body.style.overflow = 'auto';\n      window.removeEventListener('keydown', handleCloseModal);\n    };\n  }, [onCloseModal]);\n\n  return createPortal(\n    <S.Backdrop>\n      <S.Modal>\n        <S.Button type=\"button\" onClick={onCloseModal}>\n          <S.CloseIcon />\n        </S.Button>\n        <EditContactForm {...otherProps} />\n      </S.Modal>\n    </S.Backdrop>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  otherProps: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import { IoMdTrash } from 'react-icons/io';\nimport { IoPencilSharp } from 'react-icons/io5';\nimport styled from 'styled-components';\n\nexport const ContactCard = styled.div`\n  position: relative;\n  width: 100%;\n  padding-top: 28px;\n  padding-bottom: 24px;\n  padding-left: 20px;\n  padding-right: 20px;\n  background-color: ${({ theme }) => theme.colors.primaryBg};\n  border-radius: 12px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    padding-top: 10px;\n    padding-bottom: 10px;\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n`;\n\nexport const Name = styled.p`\n  margin-bottom: 7.5px;\n  max-width: 180px;\n  word-wrap: break-word;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.4;\n  color: ${({ theme }) => theme.colors.secondary};\n\n  @media screen and (max-width: 350px) {\n    max-width: 100px;\n  }\n`;\n\nexport const Number = styled.p`\n  display: flex;\n  gap: 4px;\n  flex-wrap: wrap;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.colors.secondaryText};\n\n  & > span {\n    font-weight: 700;\n    color: ${({ theme }) => theme.colors.secondary};\n    padding-bottom: 4px;\n\n    overflow-x: auto;\n    &::-webkit-scrollbar {\n      height: 4px;\n      background-color: ${({ theme }) => theme.colors.secondaryBg};\n      border-radius: 12px;\n    }\n    &::-webkit-scrollbar-thumb {\n      border-radius: 12px;\n      background-color: ${({ theme }) => theme.colors.accent};\n    }\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    gap: 8px;\n  }\n`;\n\nexport const List = styled.ul`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n\n  display: flex;\n  gap: 2px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    top: 12px;\n    right: 12px;\n    gap: 8px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n  min-width: 50px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.5;\n  text-transform: uppercase;\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  transition: background-color\n    ${({ theme }) => `${theme.duration} ${theme.timingFunction}`};\n  cursor: pointer;\n\n  &.delete {\n    color: ${({ theme }) => theme.colors.iconBtn};\n  }\n\n  &.edit {\n    color: ${({ theme }) => theme.colors.accent};\n  }\n\n  & :focus,\n  :hover:not(:disabled) {\n    color: ${({ theme }) => theme.colors.accent};\n    transform: scale(1.2);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n  }\n`;\n\nexport const DeleteIcon = styled(IoMdTrash)`\n  width: 15px;\n  height: 15px;\n  fill: currentColor;\n`;\n\nexport const EditIcon = styled(IoPencilSharp)`\n  width: 15px;\n  height: 15px;\n  fill: currentColor;\n`;\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from 'redux/contacts/slice';\nimport { Modal } from 'components/Modal';\nimport * as S from './ContactCard.styled';\n\nexport const ContactCard = ({ contactId, name, number }) => {\n  const [deleteContact, { isLoading: isDeleting, isError }] =\n    useDeleteContactMutation();\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  useEffect(() => {\n    if (isError) {\n      toast.error(\n        'Під час видалення контакту сталася помилка. Повторіть спробу пізніше.'\n      );\n    }\n  }, [isError]);\n\n  const handleDeleteContact = async contactId => {\n    await deleteContact(contactId);\n  };\n\n  const handleOpenModal = () => {\n    setIsOpenModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsOpenModal(false);\n  };\n\n  return (\n    <S.ContactCard>\n      <S.Name>{name}</S.Name>\n      <S.Number>\n        Phone number:\n        <span>{number}</span>\n      </S.Number>\n\n      <S.List>\n        <li>\n          <S.Button\n            type=\"button\"\n            onClick={() => handleDeleteContact(contactId)}\n            disabled={isDeleting}\n            className=\"delete\"\n          >\n            <S.DeleteIcon />\n            Delete\n          </S.Button>\n        </li>\n        <li>\n          <S.Button type=\"button\" className=\"edit\" onClick={handleOpenModal}>\n            <S.EditIcon />\n            Edit\n          </S.Button>\n        </li>\n      </S.List>\n      {isOpenModal && (\n        <Modal\n          id={contactId}\n          name={name}\n          number={number}\n          onCloseModal={handleCloseModal}\n        />\n      )}\n    </S.ContactCard>\n  );\n};\n\nContactCard.propTypes = {\n  contactId: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  height: 350px;\n  overflow: auto;\n  padding-right: 12px;\n\n  &::-webkit-scrollbar {\n    width: 6px;\n    background-color: ${({ theme }) => theme.colors.secondaryBg};\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background-color: ${({ theme }) => theme.colors.accent};\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    padding-right: 24px;\n  }\n`;\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 24px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { ContactCard } from 'components/ContactCard';\nimport * as S from './ContactList.styled';\n\nexport const ContactList = ({ contacts }) => {\n  const filter = useSelector(selectFilter);\n\n  const getVisibleContacts = () => {\n    return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <S.List>\n      {visibleContacts.map(({ id, name, number }) => (\n        <S.Item key={id}>\n          <ContactCard contactId={id} name={name} number={number} />\n        </S.Item>\n      ))}\n    </S.List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\nimport backgroundImg from 'images/background.jpg';\n// import backgroundImg2x from 'images/background@2x.jpg';\n\nexport const ErrorText = styled.p`\n  width: 100%;\n  text-align: center;\n  font-size: 20px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.colors.secondary};\n\n  @media screen and (min-width: 420px) {\n    font-size: 24px;\n  }\n\n  @media screen and (min-width: 680px) {\n    font-size: 28px;\n    margin-top: 150 px;\n  }\n`;\n\nexport const Section = styled.section`\n  display: flex;\n  gap: 24px;\n  flex-wrap: wrap;\n  align-items: center;\n  /* padding-top: 24px; */\n  padding: 24px;\n  /* padding-left: 24px;\n  padding-right: 24px; */\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 12px;\n    left: 50%;\n    z-index: -1;\n    display: block;\n    width: calc(100% - 24px);\n    height: calc(100% - 12px);\n\n    background-image: url(${backgroundImg});\n    background-size: cover;\n    background-position: center;\n    border-radius: 15px;\n    transform: translateX(-50%);\n\n    /* @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${backgroundImg});\n      background-size: cover;\n      background-position: center;\n    } */\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n      top: 24px;\n      width: calc(100% - 48px);\n    }\n  }\n\n  /* @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    padding-left: 48px;\n    padding-right: 48px;\n  } */\n\n  @media screen and (min-width: 1000px) {\n    flex-wrap: nowrap;\n    flex-direction: column;\n  }\n`;\n\nexport const SectionTitle = styled.h1`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n\nexport const TextBox = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 1.4;\n  color: ${({ theme }) => theme.colors.primaryText};\n`;\n\nexport const ContactsContainer = styled.div`\n  width: 100%;\n  padding: 28px 24px;\n  background-color: ${({ theme }) => theme.colors.primary};\n  border-radius: 15px;\n  box-shadow: 0px 7px 23px rgba(0, 0, 0, 0.05);\n\n  /* @media screen and (min-width: 680px) {\n    padding: 45px 51px;\n  } */\n`;\n\nexport const Text = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 350px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.secondaryText};\n`;\n","import { useFetchContactsQuery } from 'redux/contacts/slice';\nimport { AddContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport { Loader } from 'components/Loader';\nimport * as S from './Contacts.styled';\n\nconst Contacts = () => {\n  const { data, isSuccess, isFetching, isError } = useFetchContactsQuery();\n\n  if (isError) {\n    return (\n      <S.Section>\n        <S.ErrorText>\n          Тривають технічні роботи. Просимо вибачення за тимчасові незручності.\n        </S.ErrorText>\n      </S.Section>\n    );\n  }\n\n  return (\n    <S.Section>\n      <S.SectionTitle>Телефонна книга</S.SectionTitle>\n\n      <AddContactForm contacts={data} />\n\n      <S.ContactsContainer>\n        <S.TextBox>\n          <S.Title>Контакти</S.Title>\n          {isFetching && <Loader width=\"20\" height=\"20\" color=\"#1B365C\" />}\n        </S.TextBox>\n\n        <Filter />\n        {isSuccess && data.length ? (\n          <ContactList contacts={data} />\n        ) : (\n          <S.Text>\n            У вас немає контактів. Додайте контакти, щоб вони з’явилися тут.\n          </S.Text>\n        )}\n      </S.ContactsContainer>\n    </S.Section>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactForm","styled","theme","colors","primary","Input","inputBorder","secondaryText","accent","Label","TextLabel","Button","duration","timingFunction","ErrorText","errorText","schema","yup","shape","name","trim","min","max","matches","validatePattern","errorMessage","required","number","initialValues","AddContactForm","contacts","useForm","defaultValues","resolver","yupResolver","register","handleSubmit","reset","errors","formState","useAddContactMutation","addContact","isAdding","isLoading","isError","useEffect","toast","onSubmit","normalizedName","contactValidationByName","newName","some","autoComplete","noValidate","data","type","placeholder","message","disabled","Loader","width","height","color","EditContactForm","id","oldName","oldNumber","useUpdateContactMutation","updateContact","isUpdating","useFetchContactsQuery","contactValidationName","contactValidationNumber","newNumber","selectFilter","state","filter","Text","primaryText","Filter","useSelector","dispatch","useDispatch","onChange","e","changeFilter","target","value","toLowerCase","Backdrop","Modal","CloseIcon","RxCross2","modalRoot","document","querySelector","onCloseModal","otherProps","handleCloseModal","code","body","style","overflow","window","addEventListener","removeEventListener","createPortal","onClick","ContactCard","primaryBg","breakpoint","Name","secondary","Number","secondaryBg","List","iconBtn","DeleteIcon","IoMdTrash","EditIcon","IoPencilSharp","contactId","useDeleteContactMutation","deleteContact","isDeleting","useState","isOpenModal","setIsOpenModal","handleDeleteContact","className","Item","ContactList","visibleContacts","includes","map","Section","backgroundImg","SectionTitle","TextBox","Title","ContactsContainer","isSuccess","isFetching","length"],"sourceRoot":""}